<Window
	x:Class="tfmStandalone.Views.MapOverlayWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:tfmStandalone="clr-namespace:tfmStandalone" xmlns:views="clr-namespace:tfmStandalone.Views" xmlns:system="clr-namespace:System;assembly=mscorlib"
	Name="Window"
	WindowStyle="None"
	AllowsTransparency="True"
	Background="#88000000"
	ShowInTaskbar="False"
	Title="MapOverlayWindow"
	Height="800"
	SizeToContent="Width">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<views:PathToImageConverter
				x:Key="PathToImageConverter" />
			<Style
				TargetType="{x:Type Border}"
				x:Key="FolderBorderStyle">
				<Setter
					Property="Margin"
					Value="2" />
				<Setter
					Property="Background"
					Value="#88000000" />
				<Setter
					Property="Border.CornerRadius"
					Value="6" />
				<Setter
					Property="Border.Padding"
					Value="4" />
			</Style>
			<Style
				TargetType="{x:Type TextBlock}"
				x:Key="FolderTextBlockStyle">
				<Setter
					Property="VerticalAlignment"
					Value="Center" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="FontSize"
					Value="14" />
				<Setter
					Property="Margin"
					Value="10,0,0,0" />
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<DockPanel>
		<Border
			Width="34"
			Background="#00FFFFFF"
			Cursor="Hand"
			BorderBrush="#77000000"
			BorderThickness="0,0,1,0">
			<UIElement.InputBindings>
				<MouseBinding
					MouseAction="LeftClick"
					Command="{Binding ToggleCollapsedCommand}" />
			</UIElement.InputBindings>
			<Image
				Source="../Resources/Images/map.png"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Stretch="None">
				<UIElement.Effect>
					<DropShadowEffect
						x:Name="GlowEffect"
						ShadowDepth="1"
						Color="Black"
						Opacity="0.7"
						BlurRadius="1" />
				</UIElement.Effect>
			</Image>
		</Border>
		<DockPanel
			Width="240"
			Background="#44000000">
			<FrameworkElement.Style>
				<Style
					TargetType="{x:Type DockPanel}">
					<Style.Triggers>
						<DataTrigger
							Value="True"
							Binding="{Binding IsCollapsed}">
							<Setter
								Property="Visibility"
								Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</FrameworkElement.Style>
			<Border
				DockPanel.Dock="Top">
				<FrameworkElement.Style>
					<Style
						BasedOn="{StaticResource FolderBorderStyle}"
						TargetType="{x:Type Border}">
						<Style.Triggers>
							<DataTrigger
								Value="True"
								Binding="{Binding IsSelectedFolderRoot}">
								<Setter
									Property="Background"
									Value="#88638B9E" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<UIElement.InputBindings>
					<MouseBinding
						Gesture="LeftClick"
						Command="{Binding SelectFolderCommand}"
						CommandParameter="{Binding}" />
				</UIElement.InputBindings>
				<TextBlock
					Style="{StaticResource FolderTextBlockStyle}"
					Text="{Binding Name}" />
			</Border>
			<Border
				DockPanel.Dock="Top">
				<FrameworkElement.Style>
					<Style
						BasedOn="{StaticResource FolderBorderStyle}"
						TargetType="{x:Type Border}">
						<Setter
							Property="Margin"
							Value="20,2,2,2" />
						<Style.Triggers>
							<DataTrigger
								Value="True"
								Binding="{Binding IsSelectedFolderParentRoot}">
								<Setter
									Property="Visibility"
									Value="Collapsed" />
							</DataTrigger>
							<DataTrigger
								Value="True"
								Binding="{Binding IsSelectedFolderRoot}">
								<Setter
									Property="Visibility"
									Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<UIElement.InputBindings>
					<MouseBinding
						Gesture="LeftClick"
						Command="{Binding SelectFolderCommand}"
						CommandParameter="{Binding SelectedFolder.Parent}" />
				</UIElement.InputBindings>
				<TextBlock
					Style="{StaticResource FolderTextBlockStyle}"
					Text=".." />
			</Border>
			<Border
				DockPanel.Dock="Top">
				<FrameworkElement.Style>
					<Style
						BasedOn="{StaticResource FolderBorderStyle}"
						TargetType="{x:Type Border}">
						<Setter
							Property="Margin"
							Value="40,2,2,2" />
						<Setter
							Property="Background"
							Value="#88638B9E" />
						<Style.Triggers>
							<DataTrigger
								Value="True"
								Binding="{Binding IsSelectedFolderParentRoot}">
								<Setter
									Property="Margin"
									Value="20,2,2,2" />
							</DataTrigger>
							<DataTrigger
								Value="True"
								Binding="{Binding IsSelectedFolderRoot}">
								<Setter
									Property="Visibility"
									Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<TextBlock
					Style="{StaticResource FolderTextBlockStyle}"
					Text="{Binding SelectedFolder.Name}" />
			</Border>
			<ItemsControl
				DockPanel.Dock="Top"
				Margin="0,2,0,0"
				ItemsSource="{Binding SelectedFolder.ChildFolders}">
				<ItemsControl.ItemTemplate>
					<DataTemplate
						DataType="{x:Type tfmStandalone:FolderViewModel}">
						<Border>
							<FrameworkElement.Style>
								<Style
									BasedOn="{StaticResource FolderBorderStyle}"
									TargetType="{x:Type Border}">
									<Setter
										Property="Margin"
										Value="60,2,2,2" />
									<Style.Triggers>
										<DataTrigger
											Value="True"
											Binding="{Binding ElementName=Window, Path=DataContext.IsSelectedFolderRoot}">
											<Setter
												Property="Margin"
												Value="20,2,2,2" />
										</DataTrigger>
										<DataTrigger
											Value="True"
											Binding="{Binding ElementName=Window, Path=DataContext.IsSelectedFolderParentRoot}">
											<Setter
												Property="Margin"
												Value="40,2,2,2" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</FrameworkElement.Style>
							<UIElement.InputBindings>
								<MouseBinding
									Gesture="LeftClick"
									Command="{Binding ElementName=Window, Path=DataContext.SelectFolderCommand}"
									CommandParameter="{Binding}" />
							</UIElement.InputBindings>
							<TextBlock
								Style="{StaticResource FolderTextBlockStyle}"
								Text="{Binding Name}" />
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<ScrollViewer
				VerticalScrollBarVisibility="Auto"
				HorizontalScrollBarVisibility="Disabled"
				Margin="0,2,0,0">
				<ItemsControl
					ItemsSource="{Binding SelectedFolder.Files}">
					<ItemsControl.ItemTemplate>
						<DataTemplate
							DataType="{x:Type tfmStandalone:MapFileViewModel}">
							<DockPanel>
								<FrameworkElement.Style>
									<Style
										TargetType="{x:Type DockPanel}">
										<Style.Triggers>
											<Trigger
												Property="UIElement.IsMouseOver"
												Value="True">
												<Setter
													Property="Background"
													Value="#88000000" />
											</Trigger>
											<DataTrigger
												Value="True"
												Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Mode=Self}}">
												<Setter
													Property="Background"
													Value="#88000000" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</FrameworkElement.Style>
								<FrameworkElement.ContextMenu>
									<ContextMenu>
										<!--ID de conexão desconhecido: 3-->
										<MenuItem
											Command="{Binding NppMapCommand}">
											<FrameworkElement.Style>
												<Style
													BasedOn="{StaticResource MenuItem}"
													TargetType="{x:Type MenuItem}">
													<Setter
														Property="Header">
														<Setter.Value>
															<TextBlock>
																<TextBlock.Text>
																	<MultiBinding
																		StringFormat="/npp {0} {1}">
																		<Binding
																			Path="Map" />
																		<Binding
																			Path="MaskMap" />
																	</MultiBinding>
																</TextBlock.Text>
															</TextBlock>
														</Setter.Value>
													</Setter>
													<Style.Triggers>
														<DataTrigger
															Binding="{Binding MaskMap}"
															Value="{x:Null}">
															<Setter
																Property="Header"
																Value="{Binding Map}" />
															<Setter
																Property="HeaderedItemsControl.HeaderStringFormat"
																Value="/npp {0}" />
														</DataTrigger>
														<DataTrigger
															Value="{x:Static system:String.Empty}"
															Binding="{Binding MaskMap}">
															<Setter
																Property="Header"
																Value="{Binding Map}" />
															<Setter
																Property="HeaderedItemsControl.HeaderStringFormat"
																Value="/npp {0}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</FrameworkElement.Style>
										</MenuItem>
										<!--ID de conexão desconhecido: 4-->
										<MenuItem
											Command="{Binding NpMapCommand}">
											<FrameworkElement.Style>
												<Style
													BasedOn="{StaticResource MenuItem}"
													TargetType="{x:Type MenuItem}">
													<Setter
														Property="Header">
														<Setter.Value>
															<TextBlock>
																<TextBlock.Text>
																	<MultiBinding
																		StringFormat="/np {0} {1}">
																		<Binding
																			Path="Map" />
																		<Binding
																			Path="MaskMap" />
																	</MultiBinding>
																</TextBlock.Text>
															</TextBlock>
														</Setter.Value>
													</Setter>
													<Style.Triggers>
														<DataTrigger
															Binding="{Binding MaskMap}"
															Value="{x:Null}">
															<Setter
																Property="Header"
																Value="{Binding Map}" />
															<Setter
																Property="HeaderedItemsControl.HeaderStringFormat"
																Value="/np {0}" />
														</DataTrigger>
														<DataTrigger
															Value="{x:Static system:String.Empty}"
															Binding="{Binding MaskMap}">
															<Setter
																Property="Header"
																Value="{Binding Map}" />
															<Setter
																Property="HeaderedItemsControl.HeaderStringFormat"
																Value="/np {0}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</FrameworkElement.Style>
										</MenuItem>
									</ContextMenu>
								</FrameworkElement.ContextMenu>
								<Grid
									DockPanel.Dock="Bottom">
									<Border
										BorderBrush="#FFFFFFFF"
										BorderThickness="3"
										Background="#88000000"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										Margin="8"
										CornerRadius="9">
										<StackPanel
											Orientation="Horizontal"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"
											Margin="8,0,8,2">
											<TextBlock
												Foreground="#FFFFFFFF"
												FontWeight="Bold"
												FontSize="10"
												Text="{Binding Map}" />
											<TextBlock
												Foreground="#FFFFFFFF"
												FontWeight="Bold"
												FontSize="10"
												Margin="6,0,0,0"
												Text="{Binding MaskMap, StringFormat=({0})}">
												<FrameworkElement.Style>
													<Style
														TargetType="{x:Type TextBlock}">
														<Style.Triggers>
															<DataTrigger
																Binding="{Binding MaskMap}"
																Value="{x:Null}">
																<Setter
																	Property="Visibility"
																	Value="Collapsed" />
															</DataTrigger>
															<DataTrigger
																Value="{x:Static system:String.Empty}"
																Binding="{Binding MaskMap}">
																<Setter
																	Property="Visibility"
																	Value="Collapsed" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</FrameworkElement.Style>
											</TextBlock>
										</StackPanel>
									</Border>
								</Grid>
								<Border
									BorderBrush="#FFFFFFFF"
									BorderThickness="5"
									Margin="15,15,15,0"
									CornerRadius="3">
									<Image
										Source="{Binding FilePath, Converter={StaticResource PathToImageConverter}}" />
								</Border>
							</DockPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ScrollViewer>
		</DockPanel>
	</DockPanel>
</Window>
