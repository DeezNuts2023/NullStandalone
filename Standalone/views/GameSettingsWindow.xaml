<local:PinnableWindow
	x:Class="tfmStandalone.GameSettingsWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:tfmStandalone"
	Name="Window"
	FontSize="13"
	FontFamily="Verdana"
	Title="Game Settings"
	Height="500"
	Width="750"
	Topmost="True"
	CanPin="False"
	CanMinimize="False"
	CanMaximize="False"
	CanClose="False"
	SnapsToDevicePixels="True"
	Style="{StaticResource ResourceKey=PinnableWindowStyle}">
	<DockPanel>
		<StackPanel
			DockPanel.Dock="Bottom"
			Orientation="Horizontal"
			Margin="10,4"
			HorizontalAlignment="Right">
			<Button
				Width="60"
				Height="26"
				Margin="10,0"
				Content="Save"
				IsDefault="True"
				Command="{Binding SaveCommand}" />
			<Button
				Width="60"
				Height="26"
				Content="Cancel"
				IsCancel="True"
				Command="{Binding CancelCommand}" />
		</StackPanel>
		<Border
			DockPanel.Dock="Left"
			Margin="10"
			BorderBrush="{DynamicResource GameSettingsWindowSplitterRightColor}"
			BorderThickness="{DynamicResource GameSettingsWindowSplitterRightThickness}">
			<Border
				BorderBrush="{DynamicResource GameSettingsWindowSplitterLeftColor}"
				BorderThickness="{DynamicResource GameSettingsWindowSplitterLeftThickness}">
				<StackPanel
					Margin="0,0,10,0">
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								TargetType="{x:Type TextBlock}"
								x:Key="{x:Type TextBlock}">
								<Setter
									Property="HorizontalAlignment"
									Value="Left" />
								<Setter
									Property="Margin"
									Value="0,0,0,10" />
								<Setter
									Property="FrameworkElement.Cursor"
									Value="Hand" />
							</Style>
						</ResourceDictionary>
					</FrameworkElement.Resources>
					<TextBlock
						Text="General">
						<UIElement.InputBindings>
							<!--'global' Ã© o prefixo do namespace global.-->
							<MouseBinding
								Gesture="LeftClick" xmlns:global="clr-namespace:"
								CommandParameter="{x:Static global:GameSettingsCategory.General}"
								Command="{Binding SelectCategoryCommand}" />
						</UIElement.InputBindings>
						<FrameworkElement.Style>
							<Style
								BasedOn="{StaticResource TextBlock}"
								TargetType="{x:Type TextBlock}">
								<Style.Triggers>
									<DataTrigger
										Value="{x:Static :GameSettingsCategory.General}"
										Binding="{Binding SelectedCategory}">
										<Setter
											Property="TextDecorations"
											Value="Underline" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</TextBlock>
					<TextBlock
						Text="Commands">
						<UIElement.InputBindings>
							<MouseBinding
								Gesture="LeftClick"
								CommandParameter="{x:Static :GameSettingsCategory.Commands}"
								Command="{Binding SelectCategoryCommand}" />
						</UIElement.InputBindings>
						<FrameworkElement.Style>
							<Style
								BasedOn="{StaticResource TextBlock}"
								TargetType="{x:Type TextBlock}">
								<Style.Triggers>
									<DataTrigger
										Value="{x:Static :GameSettingsCategory.Commands}"
										Binding="{Binding SelectedCategory}">
										<Setter
											Property="TextDecorations"
											Value="Underline" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</TextBlock>
				</StackPanel>
			</Border>
		</Border>
		<Grid
			Margin="0,10,10,10">
			<StackPanel>
				<FrameworkElement.Style>
					<Style
						TargetType="{x:Type StackPanel}">
						<Setter
							Property="Visibility"
							Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger
								Value="{x:Static :GameSettingsCategory.General}"
								Binding="{Binding SelectedCategory}">
								<Setter
									Property="Visibility"
									Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<TextBlock
					Text="General Settings"
					Margin="10,0,10,10"
					FontSize="18" />
				<TextBlock
					Text="Home Room"
					Margin="20,0"
					ToolTip="Room the F3 hotkey takes you to" />
				<TextBox
					Margin="24,6"
					HorizontalAlignment="Left"
					Width="180"
					Text="{Binding HomeRoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				<TextBlock
					Text="Gif Recording Time (5-60 seconds)"
					Margin="20,0"
					ToolTip="How long gifs record before automatically stopping" />
				<TextBox
					Margin="24,6"
					HorizontalAlignment="Left"
					Width="60"
					Text="{Binding GifLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				<TextBlock
					Text="Theme"
					Margin="20,0" />
				<ComboBox
					HorizontalAlignment="Left"
					Margin="24,6"
					ItemsSource="{Binding Themes}"
					SelectedItem="{Binding Theme}" />
				<CheckBox
					Style="{StaticResource PushButtonStyle}"
					Content="Custom Connection Log Window"
					HorizontalAlignment="Left"
					Padding="12,5"
					Margin="24,12,24,6"
					IsChecked="{Binding UseCustomConnectionLogWindow}" />
				<CheckBox
					Style="{StaticResource PushButtonStyle}"
					Content="Custom Casier Window"
					HorizontalAlignment="Left"
					Padding="12,5"
					Margin="24,6"
					IsChecked="{Binding UseCustomCasierWindow}" />
			</StackPanel>
			<DockPanel>
				<FrameworkElement.Style>
					<Style
						TargetType="{x:Type DockPanel}">
						<Setter
							Property="Visibility"
							Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger
								Value="{x:Static :GameSettingsCategory.Commands}"
								Binding="{Binding SelectedCategory}">
								<Setter
									Property="Visibility"
									Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<Border
					DockPanel.Dock="Top"
					BorderBrush="{DynamicResource GameSettingsHeaderOuterBorderColor}"
					BorderThickness="{DynamicResource GameSettingsHeaderOuterBorderThickness}">
					<Border
						BorderBrush="{DynamicResource GameSettingsHeaderInnerBorderColor}"
						BorderThickness="{DynamicResource GameSettingsHeaderInnerBorderThickness}">
						<DockPanel
							Margin="0,0,0,6">
							<Button
								DockPanel.Dock="Right"
								Style="{StaticResource HyperlinkButtonStyle}"
								Content="Add Command"
								VerticalAlignment="Bottom"
								Margin="10,0"
								Command="{Binding AddCommandCommand}" />
							<TextBlock
								DockPanel.Dock="Top"
								Text="Custom Commands"
								Margin="10,0"
								FontSize="18" />
						</DockPanel>
					</Border>
				</Border>
				<ScrollViewer
					HorizontalScrollBarVisibility="Disabled"
					VerticalScrollBarVisibility="Auto">
					<ItemsControl
						ItemsSource="{Binding CustomCommands}">
						<ItemsControl.ItemTemplate>
							<DataTemplate
								DataType="{x:Type local:CustomCommandViewModel}">
								<Border
									BorderBrush="{DynamicResource GameSettingsCustomCommandItemOuterBorderColor}"
									BorderThickness="{DynamicResource GameSettingsCustomCommandItemOuterBorderThickness}"
									Margin="10,0">
									<Border
										BorderBrush="{DynamicResource GameSettingsCustomCommandItemInnerBorderColor}"
										BorderThickness="{DynamicResource GameSettingsCustomCommandItemInnerBorderThickness}">
										<StackPanel
											Margin="6,10">
											<TextBlock
												Text="Command" />
											<TextBox
												Margin="10,6"
												Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
											<DockPanel>
												<Button
													DockPanel.Dock="Right"
													Style="{StaticResource HyperlinkButtonStyle}"
													FontSize="11"
													Content="Add Step"
													VerticalAlignment="Bottom"
													Command="{Binding AddStepCommand}" />
												<TextBlock
													Text="Steps" />
											</DockPanel>
											<ItemsControl
												Margin="10,6"
												ItemsSource="{Binding Steps}"
												Tag="{Binding}">
												<ItemsControl.ItemTemplate>
													<DataTemplate
														DataType="{x:Type local:CustomCommandStepViewModel}">
														<DockPanel
															Margin="0,2">
															<Button
																DockPanel.Dock="Right"
																Style="{StaticResource HyperlinkButtonStyle}"
																Margin="4,0,0,0"
																VerticalAlignment="Bottom"
																FontSize="10"
																Content="Remove"
																Command="{Binding Path=Tag.RemoveStepCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
																CommandParameter="{Binding}" />
															<TextBox
																DockPanel.Dock="Right"
																Margin="4,0,0,0"
																Width="40"
																Text="{Binding Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
															<TextBlock
																DockPanel.Dock="Right"
																Margin="4,0,0,0"
																Text="Delay"
																FontSize="10"
																VerticalAlignment="Center" />
															<TextBox
																Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
														</DockPanel>
													</DataTemplate>
												</ItemsControl.ItemTemplate>
											</ItemsControl>
											<DockPanel
												Margin="0,6,0,0">
												<Button
													DockPanel.Dock="Right"
													Style="{StaticResource HyperlinkButtonStyle}"
													Content="Delete Command"
													VerticalAlignment="Bottom"
													Command="{Binding ElementName=Window, Path=DataContext.RemoveCommandCommand}"
													CommandParameter="{Binding}" />
												<TextBlock
													Foreground="{DynamicResource GameSettingsCustomCommandItemErrorColor}"
													FontSize="11"
													TextAlignment="Center"
													Text="{Binding ValidationError}" />
											</DockPanel>
										</StackPanel>
									</Border>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</DockPanel>
		</Grid>
	</DockPanel>
</local:PinnableWindow>
